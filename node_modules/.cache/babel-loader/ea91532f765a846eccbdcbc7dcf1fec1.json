{"ast":null,"code":"export const initialState = {\n  basket: []\n}; // Selector for adding total price in subtotal component\n\nexport const getBasketTotal = basket => //itterate through array\nbasket === null || basket === void 0 ? void 0 : basket.reduce((amount, index) => index.price + amount, 0);\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"ADD_TO_BASKET\":\n      //logic to adding item to basket\n      return { ...state,\n        basket: [...state.basket, action.item]\n      };\n\n    case \"REMOVE_FROM_BASKET\":\n      const index = state.basket.findIndex(basketItem => basketItem.id === action.id);\n      let newBasket = [...state.basket];\n\n      if (index >= 0) {\n        newBasket.splice(index, 1);\n      } else {\n        console.warn(`Cant't Remove Product (id: ${action.id}) as it is not in basket`);\n      }\n\n      return { ...state,\n        basket: newBasket\n      };\n\n    default:\n      return state;\n  }\n}\n\n;\nexport default reducer;","map":{"version":3,"sources":["A:/Project/React JS/amazon-clone/src/reducer.jsx"],"names":["initialState","basket","getBasketTotal","reduce","amount","index","price","reducer","state","action","type","item","findIndex","basketItem","id","newBasket","splice","console","warn"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG;AACxBC,EAAAA,MAAM,EAAE;AADgB,CAArB,C,CAIP;;AACA,OAAO,MAAMC,cAAc,GAAID,MAAD,IAC1B;AACCA,MAFyB,aAEzBA,MAFyB,uBAEzBA,MAAM,CAAEE,MAAR,CAAe,CAACC,MAAD,EAASC,KAAT,KAAoBA,KAAK,CAACC,KAAN,GAAcF,MAAjD,EAAyD,CAAzD,CAFE;;AAKP,SAASG,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC5B,UAAOA,MAAM,CAACC,IAAd;AAEG,SAAK,eAAL;AACG;AACA,aAAO,EACJ,GAAGF,KADC;AACMP,QAAAA,MAAM,EAAE,CAAC,GAAGO,KAAK,CAACP,MAAV,EAAkBQ,MAAM,CAACE,IAAzB;AADd,OAAP;;AAGH,SAAK,oBAAL;AACG,YAAMN,KAAK,GAAGG,KAAK,CAACP,MAAN,CAAaW,SAAb,CACTC,UAAD,IAAgBA,UAAU,CAACC,EAAX,KAAkBL,MAAM,CAACK,EAD/B,CAAd;AAGA,UAAIC,SAAS,GAAG,CAAC,GAAGP,KAAK,CAACP,MAAV,CAAhB;;AAEA,UAAGI,KAAK,IAAE,CAAV,EAAY;AACRU,QAAAA,SAAS,CAACC,MAAV,CAAiBX,KAAjB,EAAwB,CAAxB;AACH,OAFD,MAEK;AACDY,QAAAA,OAAO,CAACC,IAAR,CAAc,8BAA6BT,MAAM,CAACK,EAAG,0BAArD;AACH;;AACD,aAAO,EACH,GAAGN,KADA;AAEHP,QAAAA,MAAM,EAACc;AAFJ,OAAP;;AAIH;AACM,aAAOP,KAAP;AAvBT;AAyBH;;AAAA;AAED,eAAeD,OAAf","sourcesContent":["export const initialState = {\r\n    basket :[],\r\n};\r\n\r\n// Selector for adding total price in subtotal component\r\nexport const getBasketTotal = (basket) => \r\n    //itterate through array\r\n     basket?.reduce((amount, index) =>  index.price + amount, 0);\r\n\r\n\r\nfunction reducer(state, action) {\r\n    switch(action.type) \r\n     {\r\n       case \"ADD_TO_BASKET\":\r\n          //logic to adding item to basket\r\n          return {\r\n             ...state, basket: [...state.basket, action.item],\r\n         };\r\n       case \"REMOVE_FROM_BASKET\":\r\n          const index = state.basket.findIndex(\r\n              (basketItem) => basketItem.id === action.id\r\n          );\r\n          let newBasket = [...state.basket];\r\n          \r\n          if(index>=0){\r\n              newBasket.splice(index, 1);\r\n          }else{\r\n              console.warn(`Cant't Remove Product (id: ${action.id}) as it is not in basket`);\r\n          } \r\n          return {\r\n              ...state, \r\n              basket:newBasket\r\n          }\r\n       default :\r\n             return state;       \r\n     }\r\n};\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}