{"ast":null,"code":"var _jsxFileName = \"A:\\\\Project\\\\React JS\\\\amazon-clone\\\\src\\\\StateProvider.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useContext, useReducer } from 'react'; // This is the data layer\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const StateContext = /*#__PURE__*/createContext(); // Build a provider\n\nexport const StateProvider = ({\n  reducer,\n  initialState,\n  children\n}) => {\n  _s();\n\n  return /*#__PURE__*/_jsxDEV(StateContext.Provider, {\n    value: useReducer(reducer, initialState),\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}; // This is how we use it in component\n\n_s(StateProvider, \"skVOqNGrFQuDFh+lpttAJ2AZFeA=\");\n\n_c = StateProvider;\nexport const useStateValue = () => {\n  _s2();\n\n  return useContext(StateContext);\n};\n\n_s2(useStateValue, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"StateProvider\");","map":{"version":3,"sources":["A:/Project/React JS/amazon-clone/src/StateProvider.jsx"],"names":["React","createContext","useContext","useReducer","StateContext","StateProvider","reducer","initialState","children","useStateValue"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,aAAf,EAA8BC,UAA9B,EAA0CC,UAA1C,QAA2D,OAA3D,C,CAEA;;;AACA,OAAO,MAAMC,YAAY,gBAAGH,aAAa,EAAlC,C,CAGP;;AACA,OAAO,MAAMI,aAAa,GAAG,CAAC;AAACC,EAAAA,OAAD;AAAUC,EAAAA,YAAV;AAAwBC,EAAAA;AAAxB,CAAD;AAAA;;AAAA,sBACzB,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAEL,UAAU,CAACG,OAAD,EAAUC,YAAV,CAAxC;AAAA,cACKC;AADL;AAAA;AAAA;AAAA;AAAA,UADyB;AAAA,CAAtB,C,CAMP;;GANaH,a;;KAAAA,a;AAOb,OAAO,MAAMI,aAAa,GAAG;AAAA;;AAAA,SAAMP,UAAU,CAACE,YAAD,CAAhB;AAAA,CAAtB;;IAAMK,a","sourcesContent":["import React, {createContext, useContext, useReducer} from 'react';\r\n \r\n// This is the data layer\r\nexport const StateContext = createContext();\r\n\r\n\r\n// Build a provider\r\nexport const StateProvider = ({reducer, initialState, children}) => (\r\n    <StateContext.Provider value={useReducer(reducer, initialState)}>\r\n        {children}\r\n    </StateContext.Provider>\r\n);\r\n\r\n// This is how we use it in component\r\nexport const useStateValue = () => useContext(StateContext); \r\n "]},"metadata":{},"sourceType":"module"}